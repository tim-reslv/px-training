apiVersion: v1
kind: Namespace
metadata:
  name: redis
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: px-redis-sc
provisioner: kubernetes.io/portworx-volume
parameters:
  repl: "3"
  io_profile: "db"
allowVolumeExpansion: true
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
   labels:
      app: redis
   name: redis-data
   namespace: redis
   annotations:
     volume.beta.kubernetes.io/storage-class: px-redis-sc
spec:
   accessModes:
     - ReadWriteOnce
   resources:
     requests:
       storage: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: redis
spec:
  ports:
    - port: 6379
      name: redis
  clusterIP: None
  selector:
    app: redis
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: redis
  labels:
    app: redis
spec:
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      schedulerName: stork
      containers:
      - name: redis
        image: redis:3.2-alpine
        imagePullPolicy: Always
        args: ["--requirepass", "$(REDIS_PASS)"]
        ports:
          - containerPort: 6379
            name: redis
        env:
        - name: REDIS_PASS
          value: password
        volumeMounts:
          - name: redis-vol
            mountPath: /data
      volumes:
      - name: redis-vol
        persistentVolumeClaim:
          claimName: redis-data
